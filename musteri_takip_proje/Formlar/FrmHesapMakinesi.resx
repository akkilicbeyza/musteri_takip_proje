<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>