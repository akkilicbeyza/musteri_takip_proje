<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/IsQe/yfBd/8nwXf/J8F3/yfBd/8nwXf/J8F3/yfBd/8n
        wXf/J8F3/yfBd/8nwXf/J8F3/yLEHgAAAAAAAAAAAAAAAP8qs53/K7M8/yyzgP9ioLv/UaXM/yyzQP8s
        s0D/S6i//2Kgu/88rpD/K7M8/yqznQAAAAAAAAAAAAAAAAAAAAD/L6iM/zGnGv8wp4D/L6d3/zCnQP8w
        p0D/MKeg/zCnQP8vp3f/MKeA/zGnGv8vqIwAAAAAAAAAAAAAAAAAAAAA/zebkf81niL/NpmAAAAAAP82
        mz3/NZhI/zWYSP82mz0AAAAA/zaZgP81niL/N5uRAAAAAAAAAAAAAAAAAAAAAP86jqL/PI9E/zyNgAAA
        AAD/SZIH/zyOeP88jXf/SZIHAAAAAP88jYD/PI9E/zqOogAAAAAAAAAAAAAAAAAAAAD/QYOi/0CDRP9A
        gYD/RIAi/0CBlP9KjJf/SoyX/0CCk/9EgCL/QIGA/0CDRP9Bg6IAAAAAAAAAAAAAAAAAAAAA/0Z1nf9E
        dzz/RnaA/0d1Pf9Gdmb/k46Z/5OOmf9Gdmb/R3U9/0Z2gP9Edzz/RnWdAAAAAAAAAAAAAAAAAAAAAP9L
        aoz/Tmwa/0xqgP9AgAj/TGpl/0toaf9LaGn/Smtk/0CACP9MaoD/Tmwa/0tqjAAAAAAAAAAAAAAAAAAA
        AAD/T12R/1NaIv9QXoD/T1w9/1Bdc/+Alor/gJaK/1Bdc/9PXD3/UF6A/1NaIv9PXZEAAAAAAAAAAAAA
        AAAAAAAA/1VPV/9WUYj/Vk/E/1NTIv9WT5T9alam/WpWpv9XUJP/U1Mi/1ZPxP9WUYj/VlBWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/1xEtf9aRXf/WkV3/1pFd/9aRXf/WkV3/1pFd/9cRLUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9fOLP/YDh3/2A4d/9gOHf/YDh3/2A4d/9gOHf/YDiyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/Zi0t/2Yriv9nK3f/Zyt3/2crd/9nK3f/ZyqL/2YtLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2keIv9pHiIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA0YsAANdrAADX6wAA1+sAANQrAADWawAA1+sAANZr
        AADkJwAA9+8AAPfvAAD73wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yi7gP8nvP//J7z//ye8//8n
        vP//J7z//ye8//8nvP//J7z//ye8//8nvP//J7z//ye8//8nvP//J7z//ye8//8nvP//J7z//ye8//8n
        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
        Qf//XEH//1xB//9cQf//XEH//1xB//9cQf//XEH//1xB//9cQf//XEH//1xB7AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/Xzv/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/Xzv/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9i
        NOr/YjT//2I0//9iNP//YjT//2I0//9iNP//YjT//2I0//9iNP//YjT//2I0//9iNP//YjT//2I0//9i
        NekAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP9kLrv/Yy+I/1s3DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/1s3Dv9l
        L4n/ZS25AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/2spH/9oKLv/Zyj1/2co//9nKP//Zyj//2co//9nKP//Zyj//2co//9n
        KP//Zyj1/2couv9mKx4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/aiKA/2oigAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////+AAAAfzgYHP8YGBj/O5Hc/ziRHP8bmdj/O9
        vc/xvD2P87/9z/O//c/xsA2P86Wlz/G1rY/zuB3P87/9z/GwDY/7paXf+7Wt3/w4HD//v/3//wAA//9/
        /v//AAD//5/5///AA////n//////////////////
</value>
  </data>
</root>